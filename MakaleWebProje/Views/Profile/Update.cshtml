@model UserDtoUpdate
@{
    ViewData["Title"] = "Profil Güncelle";
}

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h3 class="mb-0">Profil Güncelle</h3>
            <a href="@Url.Action("ProfileDetails", "Profile")" class="btn btn-light">
                <i class="bi bi-arrow-left"></i> Profile Dön
            </a>
        </div>
        <div class="card-body">
            <form asp-action="Update" method="post" id="updateForm" class="needs-validation" novalidate>
                <input type="hidden" asp-for="Id" />
                <input type="hidden" asp-for="Password" />
                <input type="hidden" asp-for="UserRoleId" />

                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="Name" class="form-label">Ad</label>
                            <input asp-for="Name" class="form-control" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="SurName" class="form-label">Soyad</label>
                            <input asp-for="SurName" class="form-control" />
                            <span asp-validation-for="SurName" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="Email" class="form-label">Email</label>
                            <input asp-for="Email" type="email" class="form-control" />
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="UserName" class="form-label">Kullanıcı Adı</label>
                            <input asp-for="UserName" class="form-control" />
                            <span asp-validation-for="UserName" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="mb-4">
                    <div class="alert alert-info">
                        <i class="bi bi-info-circle"></i>
                        Değişiklikleri onaylamak için mevcut şifrenizi girmelisiniz.
                    </div>
                    <label asp-for="CurrentPassword" class="form-label">Mevcut Şifre</label>
                    <input asp-for="CurrentPassword" type="password" class="form-control" />
                    <span asp-validation-for="CurrentPassword" class="text-danger"></span>
                </div>

                <div class="d-flex gap-2">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-check-lg"></i> Güncelle
                    </button>
                    <a href="@Url.Action("ProfileDetails", "Profile")" class="btn btn-secondary">
                        <i class="bi bi-x"></i> İptal
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.getElementById('updateForm').addEventListener('submit', function(e) {
            e.preventDefault();

            // Loading göster
            Swal.fire({
                title: 'Lütfen Bekleyin',
                text: 'Profil güncelleniyor...',
                allowOutsideClick: false,
                showConfirmButton: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            // Form verilerini topla
            var formData = new FormData(this);

            // AJAX ile form gönderimi
            fetch(this.action, {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: 'Başarılı!',
                        text: data.message || 'Profiliniz başarıyla güncellendi.',
                        icon: 'success',
                        confirmButtonText: 'Tamam',
                        confirmButtonColor: '#28a745'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = '/Profile/ProfileDetails';
                        }
                    });
                } else {
                    Swal.fire({
                        title: 'Hata!',
                        text: data.message,
                        icon: 'error',
                        confirmButtonText: 'Tamam',
                        confirmButtonColor: '#d33'
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Hata!',
                    text: 'Bir hata oluştu. Lütfen tekrar deneyin.',
                    icon: 'error',
                    confirmButtonText: 'Tamam',
                    confirmButtonColor: '#d33'
                });
            });
        });

        // Validation mesajlarını göster
        document.querySelectorAll('input').forEach(input => {
            input.addEventListener('input', function() {
                const errorSpan = this.nextElementSibling;
                if (errorSpan && errorSpan.classList.contains('text-danger')) {
                    errorSpan.textContent = '';
                }
            });
        });
    </script>
}