@model UserDtoInsertion

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0">Kayıt Ol</h3>
                </div>
                <div class="card-body">
                    <form asp-action="Register" asp-controller="User" method="post" id="registerForm">
                        <div class="mb-3">
                            <label for="Name" class="form-label">Ad:</label>
                            <input asp-for="Name" class="form-control" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label for="SurName" class="form-label">Soyad:</label>
                            <input asp-for="SurName" class="form-control" />
                            <span asp-validation-for="SurName" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label for="Email" class="form-label">Email:</label>
                            <input asp-for="Email" type="email" class="form-control" />
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label for="UserName" class="form-label">Kullanıcı Adı:</label>
                            <input asp-for="UserName" class="form-control" />
                            <span asp-validation-for="UserName" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label for="Password" class="form-label">Şifre:</label>
                            <div class="input-group">
                                <input asp-for="Password" type="password" class="form-control" />
                                <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </div>
                            <span asp-validation-for="Password" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label for="ConfirmPassword" class="form-label">Şifre Tekrar:</label>
                            <div class="input-group">
                                <input name="ConfirmPassword" type="password" class="form-control" />
                                <button class="btn btn-outline-secondary" type="button" id="toggleConfirmPassword">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </div>
                            <span id="passwordError" class="text-danger"></span>
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-person-plus"></i> Kayıt Ol
                            </button>
                            <a href="@Url.Action("Login", "User")" class="btn btn-secondary">
                                <i class="bi bi-box-arrow-in-right"></i> Giriş Yap
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Şifre göster/gizle fonksiyonları
        function togglePasswordVisibility(inputId, buttonId) {
            const input = document.querySelector(inputId);
            const button = document.querySelector(buttonId);
            const icon = button.querySelector('i');

            button.addEventListener('click', () => {
                if (input.type === 'password') {
                    input.type = 'text';
                    icon.classList.remove('bi-eye');
                    icon.classList.add('bi-eye-slash');
                } else {
                    input.type = 'password';
                    icon.classList.remove('bi-eye-slash');
                    icon.classList.add('bi-eye');
                }
            });
        }

        // Şifre göster/gizle butonlarını aktifleştir
        togglePasswordVisibility('[name="Password"]', '#togglePassword');
        togglePasswordVisibility('[name="ConfirmPassword"]', '#toggleConfirmPassword');

        // Form submit işlemi
        document.getElementById('registerForm').addEventListener('submit', function (e) {
            e.preventDefault();

            var password = document.querySelector('[name="Password"]').value;
            var confirmPassword = document.querySelector('[name="ConfirmPassword"]').value;

            // Şifre kontrolü
            if (password !== confirmPassword) {
                Swal.fire({
                    title: 'Hata!',
                    text: 'Şifreler eşleşmiyor!',
                    icon: 'error',
                    confirmButtonText: 'Tamam',
                    confirmButtonColor: '#d33'
                });
                document.querySelector('[name="ConfirmPassword"]').value = ''; // Confirm şifreyi temizle
                return;
            }

            // Loading göster
            Swal.fire({
                title: 'Lütfen Bekleyin',
                text: 'Kayıt işlemi gerçekleştiriliyor...',
                allowOutsideClick: false,
                showConfirmButton: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            // Form verilerini topla
            var formData = new FormData(this);

            // AJAX ile form gönderimi
            fetch(this.action, {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: 'Başarılı!',
                        text: data.message || 'Kayıt işlemi başarıyla tamamlandı.',
                        icon: 'success',
                        confirmButtonText: 'Tamam',
                        confirmButtonColor: '#28a745'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = '/User/Login';
                        }
                    });
                } else {
                    Swal.fire({
                        title: 'Hata!',
                        text: data.message || 'Kayıt işlemi başarısız oldu.',
                        icon: 'error',
                        confirmButtonText: 'Tamam',
                        confirmButtonColor: '#d33'
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Hata!',
                    text: 'Bir hata oluştu. Lütfen tekrar deneyin.',
                    icon: 'error',
                    confirmButtonText: 'Tamam',
                    confirmButtonColor: '#d33'
                });
            });
        });

        // Validation mesajlarını göster
        document.querySelectorAll('input').forEach(input => {
            input.addEventListener('input', function() {
                const errorSpan = this.nextElementSibling;
                if (errorSpan && errorSpan.classList.contains('text-danger')) {
                    errorSpan.textContent = '';
                }
            });
        });
    </script>
}